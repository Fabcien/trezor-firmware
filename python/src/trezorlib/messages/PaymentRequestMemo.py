# Automatically generated by pb2py
# fmt: off
from .. import protobuf as p

if __debug__:
    try:
        from typing import Dict, List  # noqa: F401
        from typing_extensions import Literal  # noqa: F401
        EnumTypeMemoType = Literal[0, 1]
    except ImportError:
        pass


class PaymentRequestMemo(p.MessageType):

    def __init__(
        self,
        *,
        type: EnumTypeMemoType,
        data: bytes,
        amount: int = None,
        coin_name: str = None,
        mac: bytes = None,
    ) -> None:
        self.type = type
        self.data = data
        self.amount = amount
        self.coin_name = coin_name
        self.mac = mac

    @classmethod
    def get_fields(cls) -> Dict:
        return {
            1: ('type', p.EnumType("MemoType", (0, 1)), p.FLAG_REQUIRED),
            2: ('data', p.BytesType, p.FLAG_REQUIRED),
            3: ('amount', p.UVarintType, None),
            4: ('coin_name', p.UnicodeType, None),
            5: ('mac', p.BytesType, None),
        }
